<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://litterbug23.github.io</id>
    <title>litterbug23&apos;s blog</title>
    <updated>2021-09-22T08:25:54.761Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://litterbug23.github.io"/>
    <link rel="self" href="https://litterbug23.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://litterbug23.github.io/images/avatar.png</logo>
    <icon>https://litterbug23.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, litterbug23&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[设计模式]]></title>
        <id>https://litterbug23.github.io/post/she-ji-mo-shi/</id>
        <link href="https://litterbug23.github.io/post/she-ji-mo-shi/">
        </link>
        <updated>2021-09-22T08:05:25.000Z</updated>
        <content type="html"><![CDATA[<p>设计模式</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据结构与算法]]></title>
        <id>https://litterbug23.github.io/post/shuju_jiegou/</id>
        <link href="https://litterbug23.github.io/post/shuju_jiegou/">
        </link>
        <updated>2021-09-18T03:37:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="基础篇">基础篇</h1>
<h2 id="数组">数组</h2>
<h3 id="为什么很多编程语言中数组都从0开始编号">为什么很多编程语言中数组都从0开始编号？</h3>
<p>提到数组，我想你肯定不陌生，甚至还会自信地说，它很简单啊。<br>
是的，在每一种编程语言中，基本都会有数组这种数据类型。不过，它不仅仅是一种编程语言中的数据类型，还是一种最基础的数据结构。尽管数组看起来非常基础、简单，但是我估计很多人都并没有理解这个基础数据结构的精髓。<br>
在大部分编程语言中，数组都是从 0 开始编号的，但你是否下意识地想过，为什么数组要从 0 开始编号，而不是从 1 开始呢？ 从 1 开始不是更符合人类的思维习惯吗？</p>
<h3 id="如何实现随机访问">如何实现随机访问？</h3>
<p>什么是数组？我估计你心中已经有了答案。不过，我还是想用专业的话来给你做下解释。<em><strong>数组（Array）是一种线性表数据结构</strong></em>。它用一组连续的内存空间，来存储一组具有相同类型的数据。<br>
这个定义里有几个关键词，理解了这几个关键词，我想你就能彻底掌握数组的概念了。下面就从我的角度分别给你“点拨”一下。<br>
第一是 <em><strong>线性表</strong></em>(Linear List）。顾名思义，线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。其实除了数组，链表、队列、栈等也是线性表结构。<br>
<img src="https://litterbug23.github.io/post-images/1632295054529.webp" alt="线性链表" loading="lazy"><br>
而与它相对立的概念是非线性表，比如二叉树、堆、图等。之所以叫非线性，是因为，在非线性表中，数据之间并不是简单的前后关系。<br>
<img src="https://litterbug23.github.io/post-images/1632298514732.webp" alt="" loading="lazy"><br>
第二个是连续的内存空间和相同类型的数据。正是因为这两个限制，它才有了一个堪称“杀手锏”的特性：“随机访问”。但有利就有弊，这两个限制也让数组的很多操作变得非常低效，比如要想在数组中删除、插入一个数据，为了保证连续性，就需要做大量的数据搬移工作。<br>
我们拿一个长度为 10 的 int 类型的数组 int[] a = new int[10]来举例。在我画的这个图中，计算机给数组 a[10]，分配了一块连续内存空间 1000～1039，其中，内存块的首地址为 base_address = 1000。<br>
<img src="https://litterbug23.github.io/post-images/1632298541792.webp" alt="" loading="lazy"><br>
我们知道，计算机会给每个内存单元分配一个地址，计算机通过地址来访问内存中的数据。当计算机需要随机访问数组中的某个元素时，它会首先通过下面的寻址公式，计算出该元素存储的内存地址：<br>
a[i]_address = base_address + i * data_type_size<br>
其中 data_type_size 表示数组中每个元素的大小。我们举的这个例子里，数组中存储的是 int 类型数据，所以 data_type_size 就为 4 个字节。这个公式非常简单，我就不多做解释了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://litterbug23.github.io/post/hello-gridea/</id>
        <link href="https://litterbug23.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>